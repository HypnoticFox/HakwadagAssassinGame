// <auto-generated />
using System;
using HakwadagAssassinGame.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HakwadagAssassinGame.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251007124559_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HakwadagAssassinGame.Domain.Aggregates.ApplicationUserAggregate.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<uint>("ConcurrencyToken")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUsers", (string)null);
                });

            modelBuilder.Entity("HakwadagAssassinGame.Domain.Aggregates.AssassinGameAggregate.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AssignmentTypeId")
                        .HasColumnType("integer");

                    b.Property<uint>("ConcurrencyToken")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.Property<Guid?>("PlayerUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentTypeId");

                    b.HasIndex("PlayerUserId")
                        .IsUnique();

                    b.ToTable("Assignments", (string)null);
                });

            modelBuilder.Entity("HakwadagAssassinGame.Domain.Aggregates.AssassinGameAggregate.AssignmentTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AssignmentId")
                        .HasColumnType("integer");

                    b.Property<uint>("ConcurrencyToken")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.Property<int>("Cost")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Reward")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentId");

                    b.ToTable("AssignmentTasks", (string)null);
                });

            modelBuilder.Entity("HakwadagAssassinGame.Domain.Aggregates.AssassinGameAggregate.AssignmentTaskTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Cost")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Reward")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("AssignmentTaskTemplates", (string)null);
                });

            modelBuilder.Entity("HakwadagAssassinGame.Domain.Aggregates.AssassinGameAggregate.AssignmentType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("AssignmentTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "default",
                            Name = "Default"
                        },
                        new
                        {
                            Id = 2,
                            Code = "betting",
                            Name = "Betting"
                        });
                });

            modelBuilder.Entity("HakwadagAssassinGame.Domain.Aggregates.AssassinGameAggregate.Bounty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<uint>("ConcurrencyToken")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("GameId")
                        .HasColumnType("integer");

                    b.Property<int>("Reward")
                        .HasColumnType("integer");

                    b.Property<Guid>("TargetId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("GameId")
                        .IsUnique();

                    b.ToTable("Bounties", (string)null);
                });

            modelBuilder.Entity("HakwadagAssassinGame.Domain.Aggregates.AssassinGameAggregate.BountyTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BountyTemplates", (string)null);
                });

            modelBuilder.Entity("HakwadagAssassinGame.Domain.Aggregates.AssassinGameAggregate.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Archived")
                        .HasColumnType("boolean");

                    b.Property<bool>("AreHighScoresRevealed")
                        .HasColumnType("boolean");

                    b.Property<uint>("ConcurrencyToken")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.Property<string>("HostApplicationUserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("Games", (string)null);
                });

            modelBuilder.Entity("HakwadagAssassinGame.Domain.Aggregates.AssassinGameAggregate.GameStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("GameStatus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "lobby",
                            Name = "Lobby"
                        },
                        new
                        {
                            Id = 2,
                            Code = "inprogress",
                            Name = "In Progress"
                        },
                        new
                        {
                            Id = 3,
                            Code = "finished",
                            Name = "Finished"
                        });
                });

            modelBuilder.Entity("HakwadagAssassinGame.Domain.Aggregates.AssassinGameAggregate.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<uint>("ConcurrencyToken")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.Property<int>("GameId")
                        .HasColumnType("integer");

                    b.Property<int>("Score")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Players", (string)null);
                });

            modelBuilder.Entity("HakwadagAssassinGame.Domain.Aggregates.AssassinGameAggregate.Assignment", b =>
                {
                    b.HasOne("HakwadagAssassinGame.Domain.Aggregates.AssassinGameAggregate.AssignmentType", null)
                        .WithMany()
                        .HasForeignKey("AssignmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HakwadagAssassinGame.Domain.Aggregates.AssassinGameAggregate.Player", null)
                        .WithOne("Assignment")
                        .HasForeignKey("HakwadagAssassinGame.Domain.Aggregates.AssassinGameAggregate.Assignment", "PlayerUserId");
                });

            modelBuilder.Entity("HakwadagAssassinGame.Domain.Aggregates.AssassinGameAggregate.AssignmentTask", b =>
                {
                    b.HasOne("HakwadagAssassinGame.Domain.Aggregates.AssassinGameAggregate.Assignment", null)
                        .WithMany("Tasks")
                        .HasForeignKey("AssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HakwadagAssassinGame.Domain.Aggregates.AssassinGameAggregate.Bounty", b =>
                {
                    b.HasOne("HakwadagAssassinGame.Domain.Aggregates.AssassinGameAggregate.Game", null)
                        .WithOne("Bounty")
                        .HasForeignKey("HakwadagAssassinGame.Domain.Aggregates.AssassinGameAggregate.Bounty", "GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HakwadagAssassinGame.Domain.Aggregates.AssassinGameAggregate.Game", b =>
                {
                    b.HasOne("HakwadagAssassinGame.Domain.Aggregates.AssassinGameAggregate.GameStatus", null)
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HakwadagAssassinGame.Domain.Aggregates.AssassinGameAggregate.Player", b =>
                {
                    b.HasOne("HakwadagAssassinGame.Domain.Aggregates.AssassinGameAggregate.Game", "Game")
                        .WithMany("Players")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("HakwadagAssassinGame.Domain.Aggregates.AssassinGameAggregate.Assignment", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("HakwadagAssassinGame.Domain.Aggregates.AssassinGameAggregate.Game", b =>
                {
                    b.Navigation("Bounty");

                    b.Navigation("Players");
                });

            modelBuilder.Entity("HakwadagAssassinGame.Domain.Aggregates.AssassinGameAggregate.Player", b =>
                {
                    b.Navigation("Assignment");
                });
#pragma warning restore 612, 618
        }
    }
}
